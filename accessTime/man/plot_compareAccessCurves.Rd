% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access-functions.R
\name{plot_compareAccessCurves}
\alias{plot_compareAccessCurves}
\title{Compare access delay curves}
\usage{
plot_compareAccessCurves(access_df, title = "", comp_type = "relative")
}
\arguments{
\item{access_df}{\emph{data.frame.}
Data frame with the following variables:
\describe{
\item{groups}{Technology for given test}
\item{I}{Raw intelligibility value}
\item{alpha}{Percentage of asymptotic intelligibility achieved}
\item{access_time}{Access delay, in seconds}
\item{uncertainty}{Standard, unexpanded, uncertainty, in seconds}
\item{CI_U}{Upper boundary for 95\% confidence interval}
\item{CI_L}{Lower boundary for 95\% confidence interval}
}}

\item{title}{\emph{character.}
Title of the plot}

\item{comp_type}{\emph{character.}
Comparison type, one of either "flat" or "relative".
Flat compares access delay as a function of raw
intelligibility. Relative compares access delay as a function
 of the fraction of asymptotic intelligibility achieved for
 each technology.}
}
\value{
\emph{ggplot.} Plot object
}
\description{
Compare access delay curves across technologies. Can compare in two ways:
relative and flat comparisons. Relative comparisions use the percentage
achieved of the baseline performance level for comparisions. This removes
the maximum intelligibility of each technology from the comparision, and
instead focuses on how long it takes each technology to reach its own
maximum performance level. On the other hand flat comparisons compare
access delays based on the actual intelligibility level achieved by each
technology.
}
\examples{
if (requireNamespace("dplyr", quietly = TRUE)) {
#  Make a list of all tests
all_tests <- list("PTT Gate" = ptt_gate,
                  "Analog Direct" = analog_direct,
                  "Analog Conventional" = analog_conventional,
                  "P25 Direct" = p25_direct,
                  "P25 Trunked Phase 1" = p25_trunked_phase1,
                  "P25 Trunked Phase 2" = p25_trunked_phase2)

# Define alpha vector
alphas <- seq(from = 0.5, to =0.99, by = 0.01)

# Define system delay uncertainty
sys_dly_unc <- 1e-3*0.07/1.96

# Evaluate access delays for each test
A_ts_alpha <- lapply(all_tests,
     function(x){eval_access(x,alphas,sys_dly_unc)}
     )
# Grab Asymptotic Intelligibility for each technology
I0s <- sapply(all_tests,coef)["I0",]

# Add the raw intelligibility scores to data frame
A_ts <- mapply(function(x,y){
        raw_ints <- x$alpha*y
        return(data.frame(I=raw_ints,x))
    },
    A_ts_alpha,I0s,
    SIMPLIFY = FALSE)

# Combine access delays into single data frame
acc_df <- dplyr::bind_rows(A_ts,.id="groups")

# Compute upper (U) and lower (L) bounds of 95\% confidence interval
acc_df$CI_U <- acc_df$access_time + 1.96*acc_df$uncertainty
acc_df$CI_L <- acc_df$access_time - 1.96*acc_df$uncertainty

#---------------Example 1: Relative Intelligibility Comparison-------------
# -- This example compares the access delay as a function of alpha, or the
# fraction of the asymptotic intelligibility achieved by each technology.
# Here access delays for an alpha value of 0.8 corresponds to the time it
# takes for technologies to reach 80\% of their baseline performance. --

plot_compareAccessCurves(acc_df,"Relative Access Delay Comparisions")


#---------------Example 2: Flat Intelligibility Comparison-------------
# -- This example directly compares the amount of time for each technology
# to reach the same level of intelligibility, regardless of their asymptotic
# intelligibility. It is important to note however that the access delay for
# intelligibility values greater than the asymptotic intelligibility, I0, of
# a technology will be infinite. --

plot_compareAccessCurves(acc_df,"Flat Access Delay Comparisions",
                         comp_type = "flat")
}
}
